
jobs:
- job: Linux_CI_Dev

  pool: Linux-CPU

  steps:
    - script: 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d cpu -r $(Build.BinariesDirectory) -x "--use_mklml"'
      displayName: 'Command Line Script'

    - script: 'sudo rm -rf $(Agent.BuildDirectory)'
      displayName: 'Clean build folders/files'
      condition: always()

- job: Linux_CI_GPU_Dev

  pool: Linux-GPU

  steps:
    - script: 'tools/ci_build/github/linux/run_dockerbuild.sh -o ubuntu16.04 -d gpu -r $(Build.BinariesDirectory)'
      displayName: 'Command Line Script'

    - script: 'sudo rm -rf $(Agent.BuildDirectory)'
      displayName: 'Clean build folders/files'
      condition: always()

- job: Windows_CI_Dev

  pool: Win-CPU

  steps:
    - task: BatchScript@1
      inputs:
        filename: build.bat
        arguments: ' --enable_pybind --use_mkldnn --use_mklml --use_openmp --build_shared_lib --build_csharp --enable_onnx_tests'
        workingFolder: "$(Build.SourcesDirectory)"

    - task: CmdLine@1
      displayName: 'Clean build folders/files'
      inputs:
        filename: rd
        arguments: '/s /q $(Agent.BuildDirectory)'
      continueOnError: true
      condition: always()

- job: Windows_CI_GPU_Dev

  pool: Win-GPU

  variables:
    CUDA_VERSION: '9.1'

  steps:
    - task: PowerShell@1
      displayName: 'Set CUDA path'
      inputs:
        scriptName: 'tools/ci_build/github/windows/set_cuda_path.ps1'
        arguments: '-CudaMsbuildPath C:\local\cudaMsbuildIntegration-9.1.85-windows10-x64-0 -CudaVersion $(CUDA_VERSION)'

    - task: BatchScript@1
      displayName: 'Setup VS2017 env vars'
      inputs:
        filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat'
        arguments: 'amd64 -vcvars_ver=14.11'
        modifyEnvironment: true

    - task: BatchScript@1
      inputs:
        filename: build.bat
        arguments: ' --use_cuda --cuda_home="C:\local\cuda-9.1.85-windows10-x64-0" --cudnn_home="C:\local\cudnn-9.1-windows10-x64-v7.1\cuda"'
        workingFolder: "$(Build.SourcesDirectory)"

    - task: CmdLine@1
      displayName: 'Clean build folders/files'
      inputs:
        filename: rd
        arguments: '/s /q $(Agent.BuildDirectory)'
      continueOnError: true
      condition: always()

- job: MacOS_CI_Dev
  pool:
    vmImage: 'macOS-10.13'

  steps:
    - script: |
        sudo xcode-select --switch /Applications/Xcode_10.app/Contents/Developer
        ./build.sh --skip_submodule_sync --parallel
      displayName: 'Command Line Script'

    - script: 'sudo rm -rf $(Agent.BuildDirectory)'
      displayName: 'Clean build folders/files'
      condition: always()
